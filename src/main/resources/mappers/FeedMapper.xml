<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.playdata.miniproject.feed.mapper.FeedMapper">

    <!-- Feed 조회 -->
    <!-- 모든 피드 조회하기 -->
    <select id="getAllFeeds" resultType="com.playdata.miniproject.feed.dto.FeedListDTO">
        SELECT f.*, u.user_nickname, u.user_vegan_type
        FROM feed f
                 JOIN users u ON f.user_key = u.user_key
        ORDER BY feed_create_dt desc;
    </select>


    <select id="getFeedById" resultType="com.playdata.miniproject.feed.dto.FeedListDTO">
        SELECT *
        FROM feed f
        WHERE feed_id = #{feedId}
    </select>

    <!-- 파일 조회하기 -->
    <select id="getFeedFiles" resultType="com.playdata.miniproject.feed.dto.FeedfileDTO">
        SELECT * FROM feed_files
        WHERE feed_id = #{feedID}
    </select>

    <!-- 나의 피드 갖고오기 -->
    <select id="getFeedsByUser" parameterType="int" resultType="feedList">
        SELECT f.*, u.user_nickname, u.user_vegan_type
        FROM feed f
                 LEFT JOIN users u ON f.user_key = u.user_key
        WHERE f.user_key = #{userKey}
        ORDER BY feed_create_dt desc;
    </select>

    <!-- 나의 피드 갯수 조회하기 -->
    <select id="myFeedCount" parameterType="int" resultType="int">
        SELECT COUNT(*) AS feedCount
        FROM feed f
                 LEFT JOIN users u ON f.user_key = u.user_key
        WHERE f.user_key = #{userKey}
    </select>



    <!-- 특정 태그로 Feed 조회 -->
    <select id="getFeedsByTag" parameterType="String" resultType="com.playdata.miniproject.feed.dto.FeedDTO">
        SELECT * FROM feed
        WHERE feed_tag LIKE CONCAT('%', #{feedTag}, '%')
    </select>

    <!-- Feed 등록 -->
    <insert id="insertFeed" parameterType="com.playdata.miniproject.feed.dto.FeedDTO" useGeneratedKeys="true" keyProperty="feedId">
        INSERT INTO feed
        (
            user_key,
            feed_content,
            feed_create_dt,
            feed_update_dt,
            feed_tag
        )
        VALUES
            (
                #{userKey},
                #{feedContent},
                NOW(),
                NOW(),
                #{feedTag})
    </insert>

    <!-- Feed 수정 -->
    <update id="updateFeed" parameterType="com.playdata.miniproject.feed.dto.FeedDTO">
        UPDATE feed SET
                        feed_content = #{feedContent},
                        feed_tag = #{feedTag},
                        feed_update_dt = #{feedUpdateDt}
        WHERE feed_id = #{feedId}
    </update>

    <!-- Feed 삭제 -->
    <delete id="deleteFeed" parameterType="int">
        DELETE FROM feed
        WHERE feed_id = #{feedId}
    </delete>

<!--    <delete id="deleteFeedCommentByFeedId" parameterType="int">-->
<!--        DELETE FROM feed_comments-->
<!--        WHERE feed_id = #{feedId}-->
<!--    </delete>-->

    <!-- Feed 파일 등록 -->
    <insert id="insertFeedFiles" parameterType="java.util.List">
        <!-- INSERT INTO feed_file -->
        INSERT INTO feed_files
        <!-- (feed_file_id, feed_file_type, feed_file_name_org, feed_file_name, feed_upload_dt) -->
        (feed_file_type, feed_file_name_org, feed_file_name, feed_upload_dt , feed_id)
        VALUES
        <foreach collection="feedFiles" item="file" separator=",">
            (#{file.feedFileType},
            #{file.feedFileNameOrg},
            #{file.feedFileName},
            #{file.feedUploadDt},
            #{file.feedId})
        </foreach>
    </insert>





</mapper>
